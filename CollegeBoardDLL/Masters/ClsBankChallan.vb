'----------------------------------------------------------------------------------------------
'   DESIGN REFERENCE                  : NIMS 1.0
'   OBJECTIVE                         : This is the BANK CHALLAN WISE REPORT
'   ACTIVITY                          : 
'   AUTHOR                            : G KISHORE
'   INITIAL BASELINE DATE             : 26-SEP-2012
'   MODIFICATIONS LOG                 : Nil
'----------------------------------------------------------------------------------------------
Imports System.Data.OracleClient
Imports System.Configuration
Public Class ClsBankChallan

#Region "Class Variables"

    Private oConn As OracleClient.OracleConnection
    Private oCommand As New OracleClient.OracleCommand
    Private oParameter As New OracleClient.OracleParameter
    Private oAdapter As New OracleClient.OracleDataAdapter
    Private OraTrans As OracleTransaction
    Dim ds As New Data.DataSet
    Private oTrans As OracleTransaction
    Private ObjConn As Connection
    Private ReturnStr As String
#End Region

#Region " BANK CHALLAN"

    Public Function BANKCHALLAN() As DataSet
        Dim Ds As DataSet
        Dim Str As String

        Try

            Dim adap As New OracleDataAdapter
            oCommand = New OracleClient.OracleCommand
            oParameter = New OracleClient.OracleParameter

            ObjConn = New Connection
            oConn = ObjConn.GetConnection()

            oTrans = oConn.BeginTransaction()
            oCommand.Transaction = oTrans

            Ds = New DataSet

            oCommand.Connection = oConn
            adap = New OracleDataAdapter
            oCommand.CommandText = "SELECT '7/1/1010001' ADMNO, 'STUDENT NAME' STUNAME, 'FATHER NAME' FNAME,'JUNIOR-SECTION' COURSE,'2012-13' YEAR FROM DUAL"
            adap.SelectCommand = oCommand
            adap.Fill(Ds, "BANKSTUDENT")
            Return Ds

        Catch ex As Exception
            Throw (ex)
        Finally
            If oConn.State = ConnectionState.Open Then
                oConn.Close()
                oConn.Dispose()
            End If
            oCommand.Dispose()
            ObjConn = Nothing
        End Try
    End Function

#End Region

#Region " COLLEGE INFO"
    Public Function COLLEGEINFO(ByVal CODE As Integer, ByVal FLAG As String) As DataSet

        Dim Ds As DataSet
        Dim Str, WHERECODE As String

        Try

            Dim adap As New OracleDataAdapter
            oCommand = New OracleClient.OracleCommand
            oParameter = New OracleClient.OracleParameter

            ObjConn = New Connection
            oConn = ObjConn.GetConnection()

            oTrans = oConn.BeginTransaction()
            oCommand.Transaction = oTrans

            Ds = New DataSet

            oCommand.Connection = oConn
            adap = New OracleDataAdapter

            If FLAG = 0 Then
                WHERECODE = " MB.CODE=" & Val(CODE) & ""
            ElseIf FLAG = 1 Then
                WHERECODE = " MB.BOARDDISTSLNO=" & Val(CODE) & ""
            End If

            If CODE > 0 Then


                'Str = " SELECT MB.CODE,MB.OLDCODE,MB.NAME,MB.YEAROFSTART,MB.BOARDDISTSLNO,MBDIST.NAME DISTNAME,SECLANG.SECLANG,MEDIUM.MEDIUM," & _
                '      " GROUPN.GROUPNAME,FDR.AMOUNT,FDR.MATURITY_DATE,FDR.FDRRELEASE,BLIDG.PLINTH_AREA,BLIDG.BLD_RL_PERIOD_FROM," & _
                '      " BLIDG.BLD_RL_PERIOD_TO,AFF.AFFYEAR,AFF.AFFEXTDUPTO,MSEC.ORG_TOTAL_SEC,MSEC.ADD_TOTAL_SEC,DECODE (PENT.SHIFTING, 2, 'SHIFTING', 'NOT SHIFTING') SHIFTING" & _
                '      " FROM EXAM_BOARDCOLLEGE_MT MB,EXAM_BOARDDIST_MT MBDIST,M_FDR_DT FDR,M_BUILDING_PLGROUND_DT BLIDG,M_AFFILIATION_DT AFF," & _
                '      " M_SECTIONS_DT MSEC,M_PENALTIES_DT PENT,VW_EXAMBOARD_CODEWISEMEDIUM MEDIUM,VW_EXAMBOARD_CODEWISEGROUP GROUPN," & _
                '      " VW_EXAMBOARD_CODEWISESECLANG SECLANG WHERE MB.BOARDDISTSLNO = MBDIST.BOARDDISTSLNO(+) AND MB.CODE = FDR.CCODE(+)" & _
                '      " AND MB.CODE = BLIDG.CCODE(+) AND MB.CODE = AFF.CCODE(+) AND MB.CODE = MSEC.CCODE(+) AND MB.CODE = PENT.CCODE(+)" & _
                '      " AND MB.CODE = SECLANG.CODE(+) AND MB.CODE = MEDIUM.CODE(+) AND MB.CODE = GROUPN.CODE(+) AND MB.CODE=" & Val(CODE)

                Str = " SELECT DISTINCT MB.CODE,MB.OLDCODE,MB.NAME,MB.YEAROFSTART,CLGTYPE.NAME CCATEGORY,MB.BOARDDISTSLNO,MB.ADDR1,MB.ADDR2,MB.ADDR3,MB.ADDR4,MB.BANK_BRNACH,MB.BIE_CLERK_MOBILE," & _
                      " MB.BIE_CLERK_NAME,MB.BIEZONE,MB.LOC_COLLEGE,MB.LOI_GO_DATE,MB.LOI_GO_NO,MB.MANDALSLNO,MAN.NAME MANDAL,MB.PLAN_BRS_PROC_NO," & _
                      " MB.PRIIC_MOBILE,MB.PRIIC_NAME,MB.RUN_STATUS,MB.SOCIETY_REGISTER_NO,MB.IC_MOBILE,MB.IC_NAME,SOCT.REGISTERED_DATE,SOCT.SOCIETYSLNO," & _
                      " SOCT.REGISTERED_NO,SOCT.MOBILE,SOCT.ADDRESS1,SOCT.ADDRESS2,SOCT.YEAROFSTART,SOCT.AFFILT_EXT_UPTO,SOCT.SOCT_NAME,SOCT.CORRESPONDENTNAME," & _
                      " MSEC.ORG_SCIENCE_SEC,MSEC.ORG_ARTS_SEC,MSEC.ORG_TOTAL_SEC,MSEC.ADD_SCIENCE_SEC,MSEC.ADD_ARTS_SEC,MSEC.ADD_TOTAL_SEC,MSEC.GRANDTOTAL ," & _
                      " TO_CHAR(BLIDG.BLD_RL_PERIOD_FROM,'DD-MON-YYYY') BLD_RL_PERIOD_FROM ,TO_CHAR(BLIDG.BLD_RL_PERIOD_TO,'DD-MON-YYYY') BLD_RL_PERIOD_TO ,TO_CHAR(BLIDG.PG_RL_PERIOD_FROM,'DD-MON-YYYY') PG_RL_PERIOD_FROM ,TO_CHAR(BLIDG.PG_RL_PERIOD_TO,'DD-MON-YYYY') PG_RL_PERIOD_TO ," & _
                      " DECODE (BLIDG.BUILDING, 1, 'RENTED', 'REGISTERED LEASE') BUILDING,DECODE (BLIDG.PLAYGROUNDTYPE, 1, 'RENTED', 2,'REGISTERED LEASE',3,'SFT') PLAYGROUNDTYPE," & _
                      " DECODE (BLIDG.LANDTYPE, 1, 'ACRES', 'GUNTA') LANDTYPE,DECODE (BLIDG.BUILDINGTYPE, 1, 'RCC',2, 'ACC',3,'SHED') BUILDINGTYPE," & _
                      " BLIDG.PLINTH_AREA,BLIDG.DIST_PG,BLIDG.PARK_AREA,  DECODE (CER.FIRESLNO2, 1, 'SUBMITTED', 'NOT SUBMITTED') FIRESLNO, " & _
                      " DECODE (CER.NOCSLNO2, 1, 'SUBMITTED', 'NOT SUBMITTED') NOCSLNO, DECODE (CER.SANITORYSLNO2, 1, 'SUBMITTED', 'NOT SUBMITTED') SANITORYSLNO, " & _
                      " DECODE (CER.STRUCTURALSLNO2, 1, 'SUBMITTED', 'NOT SUBMITTED') STRUCTURALSLNO,PENT.SHIFTING_PEN_AMT,PENT.SOC_NAME_CH_AMT," & _
                      " PENT.COURT_CASES_AMT,PENT.RESTART_AMT,PENT.PENT_YEAR,PENT.PENT_PAID,PENT.PENT_DUE,PENT.CLG_PEN_AMT," & _
                      " DECODE(PENT.SHIFTING, 1, 'YES', 'NO') SHIFTING,DECODE(PENT.SOC_NAME_CHANGE, 1, 'YES', 'NO') SOC_NAME_CHANGE,DECODE(PENT.COURT_CASES, 1, 'YES', 'NO') COURT_CASES," & _
                      " DECODE(PENT.RESTART, 1, 'YES', 'NO') RESTART,DECODE(PENT.PENT_IMPOSED, 1, 'YES', 'NO') PENT_IMPOSED,DECODE(PENT.CLG_CH_NAME, 1, 'YES', 'NO') CLG_CH_NAME," & _
                      " AFF.DD_DATE DDDATE,AFF.PAY_TYPE,AFF.DD_NO,AFF.MAG_AMONT,AFF.DUE_MAG_AMT," & _
                      " AFF.SURPLUS_BIE_AMT,AFF.APPLICATION_FEE,AFF.ORG_SEC_FEE,AFF.ADD_SEC_FEE,AFF.INSP_FEE,AFF.LATE_FEE,AFF.DD_AMT,AFF.AFFYEAR," & _
                      " AFF.BANKNAME,AFF.AFFEXTDUPTO,TO_CHAR(FDR.FDRDATE,'DD-MON-YYYY') FDRDATE ,FDR.MATURITY_DATE,FDR.RELEASEDATE,FDR.FDRNO,FDR.AMOUNT,  DECODE  (FDR.FDRRELEASE, 1, 'YES', 'NO') FDRRELEASE,FDR.BANKNAME," & _
                      " MBDIST.NAME DISTNAME,SECLANG.SECLANG,MEDIUM.MEDIUM,GROUPN.GROUPNAME,DECODE (PENT.SHIFTING, 2, 'SHIFTING', 'NOT SHIFTING') SHIFTING ,TO_CHAR(SYSDATE,'DD-MON-YYYY') SYSDAT " & _
                      " FROM EXAM_BOARDCOLLEGE_MT MB,EXAM_BOARDDIST_MT MBDIST,M_FDR_DT FDR,M_BUILDING_PLGROUND_DT BLIDG,M_AFFILIATION_DT AFF,M_SECTIONS_DT MSEC," & _
                      " M_PENALTIES_DT PENT,M_SOCIETY_DT SOCT,M_CERTIFICATES_DT CER, EXAM_BOARDCOLLTYPE_MT CLGTYPE,T_MANDAL_MT MAN,VW_EXAMBOARD_CODEWISEMEDIUM MEDIUM,VW_EXAMBOARD_CODEWISEGROUP GROUPN," & _
                      " VW_EXAMBOARD_CODEWISESECLANG SECLANG WHERE  MB.BOARDDISTSLNO = MBDIST.BOARDDISTSLNO(+) AND MB.CODE = FDR.CCODE(+) AND MB.CODE = BLIDG.CCODE(+)" & _
                      " AND MB.CODE = AFF.CCODE(+) AND MB.CODE = MSEC.CCODE(+) AND MB.CODE = PENT.CCODE(+) AND MB.CODE = SECLANG.CODE(+) AND MB.CODE = MEDIUM.CODE(+)   AND MB.BOARDCOLLTYPESLNO=CLGTYPE.CODE(+) " & _
                      " AND MB.CODE = GROUPN.CODE(+) AND MB.CODE = CER.CCODE(+) AND  MB.MANDALSLNO=MAN.MANDALSLNO(+) AND MB.SOCIETY_REGISTER_NO=SOCT.REGISTERED_NO(+) AND " & WHERECODE.ToString & " ORDER BY MB.CODE "

            End If


            oCommand.CommandText = Str

            adap.SelectCommand = oCommand
            adap.Fill(Ds, "BOARD_DT")
            Return Ds

        Catch ex As Exception
            Throw (ex)
        Finally
            If oConn.State = ConnectionState.Open Then
                oConn.Close()
                oConn.Dispose()
            End If
            oCommand.Dispose()
            ObjConn = Nothing
        End Try
    End Function
    Public Function COLLEGEINFOALL() As DataSet

        Dim Ds As DataSet
        Dim Str, WHERECODE As String

        Try

            Dim adap As New OracleDataAdapter
            oCommand = New OracleClient.OracleCommand
            oParameter = New OracleClient.OracleParameter

            ObjConn = New Connection
            oConn = ObjConn.GetConnection()

            oTrans = oConn.BeginTransaction()
            oCommand.Transaction = oTrans

            Ds = New DataSet

            oCommand.Connection = oConn
            adap = New OracleDataAdapter


            Str = " SELECT DISTINCT MB.CODE,MB.OLDCODE,MB.NAME,MB.YEAROFSTART,CLGTYPE.NAME CCATEGORY,MB.BOARDDISTSLNO,MB.ADDR1,MB.ADDR2,MB.ADDR3,MB.ADDR4,MB.BANK_BRNACH,MB.BIE_CLERK_MOBILE," & _
                  " MB.BIE_CLERK_NAME,MB.BIEZONE,MB.LOC_COLLEGE,MB.LOI_GO_DATE,MB.LOI_GO_NO,MB.MANDALSLNO,MAN.NAME MANDAL,MB.PLAN_BRS_PROC_NO," & _
                  " MB.PRIIC_MOBILE,MB.PRIIC_NAME,MB.RUN_STATUS,MB.SOCIETY_REGISTER_NO,MB.IC_MOBILE,MB.IC_NAME,SOCT.REGISTERED_DATE,SOCT.SOCIETYSLNO," & _
                  " SOCT.REGISTERED_NO,SOCT.MOBILE,SOCT.ADDRESS1,SOCT.ADDRESS2,SOCT.YEAROFSTART,SOCT.AFFILT_EXT_UPTO,SOCT.SOCT_NAME,SOCT.CORRESPONDENTNAME," & _
                  " MSEC.ORG_SCIENCE_SEC,MSEC.ORG_ARTS_SEC,MSEC.ORG_TOTAL_SEC,MSEC.ADD_SCIENCE_SEC,MSEC.ADD_ARTS_SEC,MSEC.ADD_TOTAL_SEC,MSEC.GRANDTOTAL ," & _
                  " BLIDG.BLD_RL_PERIOD_FROM,BLIDG.BLD_RL_PERIOD_TO,BLIDG.PG_RL_PERIOD_FROM,BLIDG.PG_RL_PERIOD_TO," & _
                  " DECODE (BLIDG.BUILDING, 1, 'RENTED', 'REGISTERED LEASE') BUILDING,DECODE (BLIDG.PLAYGROUNDTYPE, 1, 'RENTED', 2,'REGISTERED LEASE',3,'SFT') PLAYGROUNDTYPE," & _
                  " DECODE (BLIDG.LANDTYPE, 1, 'ACRES', 'GUNTA') LANDTYPE,DECODE (BLIDG.BUILDINGTYPE, 1, 'RCC',2, 'ACC',3,'SHED') BUILDINGTYPE," & _
                  " BLIDG.PLINTH_AREA,BLIDG.DIST_PG,BLIDG.PARK_AREA,  DECODE (CER.FIRESLNO2, 1, 'SUBMITTED', 'NOT SUBMITTED') FIRESLNO, " & _
                  " DECODE (CER.NOCSLNO2, 1, 'SUBMITTED', 'NOT SUBMITTED') NOCSLNO, DECODE (CER.SANITORYSLNO2, 1, 'SUBMITTED', 'NOT SUBMITTED') SANITORYSLNO, " & _
                  " DECODE (CER.STRUCTURALSLNO2, 1, 'SUBMITTED', 'NOT SUBMITTED') STRUCTURALSLNO,PENT.SHIFTING_PEN_AMT,PENT.SOC_NAME_CH_AMT," & _
                  " PENT.COURT_CASES_AMT,PENT.RESTART_AMT,PENT.PENT_YEAR,PENT.PENT_PAID,PENT.PENT_DUE,PENT.CLG_PEN_AMT," & _
                  " DECODE(PENT.SHIFTING, 1, 'YES', 'NO') SHIFTING,DECODE(PENT.SOC_NAME_CHANGE, 1, 'YES', 'NO') SOC_NAME_CHANGE,DECODE(PENT.COURT_CASES, 1, 'YES', 'NO') COURT_CASES," & _
                  " DECODE(PENT.RESTART, 1, 'YES', 'NO') RESTART,DECODE(PENT.PENT_IMPOSED, 1, 'YES', 'NO') PENT_IMPOSED,DECODE(PENT.CLG_CH_NAME, 1, 'YES', 'NO') CLG_CH_NAME," & _
                  " AFF.DD_DATE DDDATE,AFF.PAY_TYPE,AFF.DD_NO,AFF.MAG_AMONT,AFF.DUE_MAG_AMT," & _
                  " AFF.SURPLUS_BIE_AMT,AFF.APPLICATION_FEE,AFF.ORG_SEC_FEE,AFF.ADD_SEC_FEE,AFF.INSP_FEE,AFF.LATE_FEE,AFF.DD_AMT,AFF.AFFYEAR," & _
                  " AFF.BANKNAME,AFF.AFFEXTDUPTO,FDR.FDRDATE,FDR.MATURITY_DATE,FDR.RELEASEDATE,FDR.FDRNO,FDR.AMOUNT,  DECODE  (FDR.FDRRELEASE, 1, 'YES', 'NO') FDRRELEASE,FDR.BANKNAME," & _
                  " MBDIST.NAME DISTNAME,SECLANG.SECLANG,MEDIUM.MEDIUM,GROUPN.GROUPNAME,DECODE (PENT.SHIFTING, 2, 'SHIFTING', 'NOT SHIFTING') SHIFTING " & _
                  " FROM EXAM_BOARDCOLLEGE_MT MB,EXAM_BOARDDIST_MT MBDIST,M_FDR_DT FDR,M_BUILDING_PLGROUND_DT BLIDG,M_AFFILIATION_DT AFF,M_SECTIONS_DT MSEC," & _
                  " M_PENALTIES_DT PENT,M_SOCIETY_DT SOCT,M_CERTIFICATES_DT CER, EXAM_BOARDCOLLTYPE_MT CLGTYPE,T_MANDAL_MT MAN,VW_EXAMBOARD_CODEWISEMEDIUM MEDIUM,VW_EXAMBOARD_CODEWISEGROUP GROUPN," & _
                  " VW_EXAMBOARD_CODEWISESECLANG SECLANG WHERE  MB.BOARDDISTSLNO = MBDIST.BOARDDISTSLNO(+) AND MB.CODE = FDR.CCODE(+) AND MB.CODE = BLIDG.CCODE(+)" & _
                  " AND MB.CODE = AFF.CCODE(+) AND MB.CODE = MSEC.CCODE(+) AND MB.CODE = PENT.CCODE(+) AND MB.CODE = SECLANG.CODE(+) AND MB.CODE = MEDIUM.CODE(+)   AND MB.BOARDCOLLTYPESLNO=CLGTYPE.CODE(+) " & _
                  " AND MB.CODE = GROUPN.CODE(+) AND MB.CODE = CER.CCODE(+) AND  MB.MANDALSLNO=MAN.MANDALSLNO(+) AND MB.SOCIETY_REGISTER_NO=SOCT.REGISTERED_NO(+)  AND MB.BOARDCORPCOLLSLNO=1  ORDER BY MB.CODE "


            oCommand.CommandText = Str

            adap.SelectCommand = oCommand
            adap.Fill(Ds, "BOARD_DT")
            Return Ds

        Catch ex As Exception
            Throw (ex)
        Finally
            If oConn.State = ConnectionState.Open Then
                oConn.Close()
                oConn.Dispose()
            End If
            oCommand.Dispose()
            ObjConn = Nothing
        End Try
    End Function

    'Below Modification By Anil Podili'
    Public Function COLLEGEINFONEW(ByVal Strdistrict As String, ByVal strsociety As String, ByVal STRDATEFILTER As String, ByVal strrelease As String) As DataSet
        ', ByVal stryear As String

        Dim Ds As DataSet
        Dim Str, WHERECODE As String

        Try

            Dim adap As New OracleDataAdapter
            oCommand = New OracleClient.OracleCommand
            oParameter = New OracleClient.OracleParameter

            ObjConn = New Connection
            oConn = ObjConn.GetConnection()

            oTrans = oConn.BeginTransaction()
            oCommand.Transaction = oTrans

            Ds = New DataSet

            oCommand.Connection = oConn
            adap = New OracleDataAdapter


            Str = " SELECT DISTINCT MB.CODE,FDR.FDRACNO,MB.OLDCODE,MB.NAME,MB.YEAROFSTART,CLGTYPE.NAME CCATEGORY,MB.BOARDDISTSLNO,MB.ADDR1,MB.ADDR2,MB.ADDR3,MB.ADDR4,MB.BANK_BRNACH,MB.BIE_CLERK_MOBILE," & _
                  " MB.BIE_CLERK_NAME,MB.BIEZONE,MB.LOC_COLLEGE,MB.LOI_GO_DATE,MB.LOI_GO_NO,MB.MANDALSLNO,MAN.NAME MANDAL,MB.PLAN_BRS_PROC_NO," & _
                  " MB.PRIIC_MOBILE,MB.PRIIC_NAME,MB.RUN_STATUS,MB.SOCIETY_REGISTER_NO,MB.IC_MOBILE,MB.IC_NAME,SOCT.REGISTERED_DATE,SOCT.SOCIETYSLNO," & _
                  " SOCT.REGISTERED_NO,SOCT.MOBILE,SOCT.ADDRESS1,SOCT.ADDRESS2,SOCT.YEAROFSTART,SOCT.AFFILT_EXT_UPTO,SOCT.SOCT_NAME,SOCT.CORRESPONDENTNAME," & _
                  " MSEC.ORG_SCIENCE_SEC,MSEC.ORG_ARTS_SEC,MSEC.ORG_TOTAL_SEC,MSEC.ADD_SCIENCE_SEC,MSEC.ADD_ARTS_SEC,MSEC.ADD_TOTAL_SEC,MSEC.GRANDTOTAL ," & _
                  " TO_CHAR(BLIDG.BLD_RL_PERIOD_FROM,'DD-MON-YYYY') BLD_RL_PERIOD_FROM , TO_CHAR( BLIDG.BLD_RL_PERIOD_TO,'DD-MON-YYYY')BLD_RL_PERIOD_TO ,TO_CHAR(BLIDG.PG_RL_PERIOD_FROM,'DD-MON-YYYY') PG_RL_PERIOD_FROM ,TO_CHAR(BLIDG.PG_RL_PERIOD_TO,'DD-MON-YYYY')PG_RL_PERIOD_TO ," & _
                  " DECODE (BLIDG.BUILDING, 1, 'RENTED', 'REGISTERED LEASE') BUILDING,DECODE (BLIDG.PLAYGROUNDTYPE, 1, 'RENTED', 2,'REGISTERED LEASE',3,'SFT') PLAYGROUNDTYPE," & _
                  " DECODE (BLIDG.LANDTYPE, 1, 'ACRES', 'GUNTA') LANDTYPE,DECODE (BLIDG.BUILDINGTYPE, 1, 'RCC',2, 'ACC',3,'SHED') BUILDINGTYPE," & _
                  " BLIDG.PLINTH_AREA,BLIDG.DIST_PG,BLIDG.PARK_AREA,  " & _
                  " DECODE (CER.FIRESLNO1, 1, 'YES', 'NO') FIRECERT, DECODE (CER.FIRESLNO2, 1, 'SUBMITTED', 'NOTSUBMITTED') FIRESUB,TO_CHAR(FIREFROM,'DD-MON-YYYY') FIRFROM ,TO_CHAR(CER.FIRETO,'DD-MON-YYYY') FIRTO,CER.FIREPATH ," & _
                  " DECODE (CER.SANITORYSLNO1, 1, 'YES', 'NO') SANITORYCERT,DECODE (CER.SANITORYSLNO2, 1, 'SUBMITTED', 'NOTSUBMITTED') SANITORYSUB,TO_CHAR(SANITORYFROM,'DD-MON-YYYY') SANITORYFROM,TO_CHAR(SANITORYTO,'DD-MON-YYYY') SANTO,CER.SANITORYPATH ," & _
                  " DECODE (CER.NOCSLNO1, 1, 'YES', 'NO') NOCCERT,DECODE (CER.NOCSLNO2, 1, 'SUBMITTED', 'NOTSUBMITTED') NOCSUB,TO_CHAR(NOCFROM,'DD-MON-YYYY') NOCFROM,TO_CHAR(CER.NOCTO,'DD-MON-YYYY') NOCTO, CER.NOCPATH, " & _
                  " DECODE (CER.STRUCTURALSLNO1, 1, 'YES', 'NO') STRUCTURALSLNO,DECODE (CER.STRUCTURALSLNO2, 1, 'SUBMITTED', 'NOTSUBMITTED') STRUCTURALSUB,TO_CHAR(CER.STRUCTURALFROM,'DD-MON-YYYY') STRUCTURALFROM,TO_CHAR(CER.STRUCTURALTO,'DD-MON-YYYY') STRUCTURALTO,CER.STRUCTURALPATH, " & _
                  " DECODE (CER.AFFACADAMICSLNO, 1, 'YES', 'NO') AFFACADAMICSLNO,DECODE (CER.AFFACADAMICSUB, 1, 'SUBMITTED', 'NOTSUBMITTED') AFFACADAMICSUB,TO_CHAR(CER.AFFFROM,'DD-MON-YYYY') AFFFROM,TO_CHAR(CER.AFFTO,'DD-MON-YYYY') AFFTO,CER.AFFPATH, " & _
                  " DECODE (CER.ADDISECTIONSLNO, 1, 'YES', 'NO') ADDISECTIONSLNO,DECODE (CER.ADDISECTIONSUB, 1, 'SUBMITTED', 'NOTSUBMITTED') ADDISECTIONSUB,TO_CHAR(CER.SECFROM,'DD-MON-YYYY') SECFROM,TO_CHAR(CER.SECTO,'DD-MON-YYYY') SECTO,CER.SECTIONSPATH, " & _
                  " DECODE (CER.REGLEASEDEEDSLNO, 1, 'YES', 'NO') REGLEASEDEEDSLNO,DECODE (CER.REGLEASEDEEDSUB, 1, 'SUBMITTED', 'NOTSUBMITTED') REGLEASEDEEDSUB,TO_CHAR(CER.LEASEFROM,'DD-MON-YYYY') LEASEFROM,TO_CHAR(CER.LEASETO,'DD-MON-YYYY') LEASETO,CER.LEASEPATH, " & _
                  " DECODE (CER.FDRSLNO, 1, 'YES', 'NO') FDRSLNO,DECODE (CER.FDRSUB, 1, 'SUBMITTED', 'NOTSUBMITTED') FDRSUB,TO_CHAR(CER.FDRFROM,'DD-MON-YYYY') FDRFROM,TO_CHAR(CER.FDRTO,'DD-MON-YYYY') FDRTO,CER.FDRPATH, " & _
                  " PENT.SHIFTING_PEN_AMT,PENT.SOC_NAME_CH_AMT," & _
                  " PENT.COURT_CASES_AMT,PENT.RESTART_AMT,PENT.PENT_YEAR,PENT.PENT_PAID,PENT.PENT_DUE,PENT.CLG_PEN_AMT," & _
                  " DECODE(PENT.SHIFTING, 1, 'YES', 'NO') SHIFTING,DECODE(PENT.SOC_NAME_CHANGE, 1, 'YES', 'NO') SOC_NAME_CHANGE,DECODE(PENT.COURT_CASES, 1, 'YES', 'NO') COURT_CASES," & _
                  " DECODE(PENT.RESTART, 1, 'YES', 'NO') RESTART,DECODE(PENT.PENT_IMPOSED, 1, 'YES', 'NO') PENT_IMPOSED,DECODE(PENT.CLG_CH_NAME, 1, 'YES', 'NO') CLG_CH_NAME," & _
                  " AFF.DD_DATE DDDATE,AFF.PAY_TYPE,AFF.DD_NO,AFF.MAG_AMONT,AFF.DUE_MAG_AMT," & _
                  " AFF.SURPLUS_BIE_AMT,AFF.APPLICATION_FEE,AFF.ORG_SEC_FEE,AFF.ADD_SEC_FEE,AFF.INSP_FEE,AFF.LATE_FEE,AFF.DD_AMT,AFF.AFFYEAR," & _
                  " AFF.BANKNAME,AFF.AFFEXTDUPTO,TO_CHAR( FDR.FDRDATE,'DD/MM/YYYY') FDRDATE,TO_CHAR( FDR.MATURITY_DATE,'DD/MM/YYYY') FDRMATURITY_DATE,FDR.RELEASEDATE,FDR.RATEOF_INT,FDR.FDRNO,FDR.AMOUNT,  DECODE  (FDR.FDRRELEASE, 1, 'YES', 'NO') FDRRELEASE,FDR.MATURITY_AMT,FDR.BANKNAME FDRBANK," & _
                  " MBDIST.NAME DISTNAME,SECLANG.SECLANG,MEDIUM.MEDIUM,GROUPN.GROUPNAME,DECODE (PENT.SHIFTING, 2, 'SHIFTING', 'NOT SHIFTING') SHIFTING,TO_CHAR(SYSDATE,'DD-MON-YYYY') SYSDAT " & _
                  " FROM EXAM_BOARDCOLLEGE_MT MB,EXAM_BOARDDIST_MT MBDIST,M_FDR_DT FDR,M_BUILDING_PLGROUND_DT BLIDG,M_AFFILIATION_DT AFF,M_SECTIONS_DT MSEC," & _
                  " M_PENALTIES_DT PENT,M_SOCIETY_DT SOCT,M_CERTIFICATES_DT CER, EXAM_BOARDCOLLTYPE_MT CLGTYPE,T_MANDAL_MT MAN,VW_EXAMBOARD_CODEWISEMEDIUM MEDIUM,VW_EXAMBOARD_CODEWISEGROUP GROUPN," & _
                  " VW_EXAMBOARD_CODEWISESECLANG SECLANG WHERE  MB.BOARDDISTSLNO = MBDIST.BOARDDISTSLNO(+) AND MB.CODE = FDR.CCODE(+) AND MB.CODE = BLIDG.CCODE(+)" & _
                  " AND MB.CODE = AFF.CCODE(+)  AND MB.CODE = MSEC.CCODE(+) AND MB.CODE = PENT.CCODE(+) AND MB.CODE = SECLANG.CODE(+) AND MB.CODE = MEDIUM.CODE(+)   AND MB.BOARDCOLLTYPESLNO=CLGTYPE.CODE(+) " & _
                  " AND MB.CODE = GROUPN.CODE(+) AND MB.CODE = CER.CCODE(+) AND  MB.MANDALSLNO=MAN.MANDALSLNO(+) AND MB.SOCIETY_REGISTER_NO=SOCT.REGISTERED_NO(+)  AND MB.BOARDCORPCOLLSLNO=1 " & Strdistrict & strsociety & STRDATEFILTER & strrelease & "   ORDER BY MB.CODE "
            '& stryear
            'CER.FIREFROM, CER.FIRETO,CER.NOCFROM,CER.NOCTO, CER.SANITORYFROM,CER.SANITORYTO,CER.STRUCTURALFROM,CER.STRUCTURALTO,

            oCommand.CommandText = Str

            adap.SelectCommand = oCommand
            adap.Fill(Ds)
            Return Ds

        Catch ex As Exception
            Throw (ex)
        Finally
            If oConn.State = ConnectionState.Open Then
                oConn.Close()
                oConn.Dispose()
            End If
            oCommand.Dispose()
            ObjConn = Nothing
        End Try
    End Function

#End Region

End Class
